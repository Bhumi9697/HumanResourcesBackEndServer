Resources:

  ProfilePhotosBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.bucket}-profile-photos
#      BucketEncryption:
#      ServerSideEncryptionConfiguration:
#        - ServerSideEncryptionByDefault:
#          SSEAlgorithm: AES256
      # Set the CORS policy
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

  PrivateDocumentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.bucket}-private-documents
      # Set the CORS policy
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

  PublicDocumentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      # Set the CORS policy
      BucketName: ${self:custom.bucket}-public-documents
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            MaxAge: 3000

# Print out the name of the bucket that is created
Outputs:
  ProfilePhotosBucket:
    Value:
      Ref: ProfilePhotosBucket
  PrivateDocumentsBucket:
    Value:
      Ref: PrivateDocumentsBucket
  PublicDocumentsBucket:
    Value:
      Ref: PublicDocumentsBucket
