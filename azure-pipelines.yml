trigger: none

parameters:
- name: devMatchSubmissionId
  displayName: DevMatch Submission ID
  type: string
  default: NULL

- name: devMatchRepoUrl
  displayName: A DevMatch git repo
  type: string
  default: NULL

pool:
  vmImage: ubuntu-latest

variables:
  AWS_ACCESS_KEY_ID: PASTE_YOUR_KEY_HERE
  AWS_SECRET_ACCESS_KEY: PASTE_YOUR_SECRET_KEY_HERE
  DEVMATCH_SUBMISSION_ID: ${{ parameters.devMatchSubmissionId }}

steps:
- task: CmdLine@2
  inputs:
    script: |
      echo devmatch identifier is ${{ variables.DEVMATCH_SUBMISSION_ID }}
  displayName: "devMatchSubmissionId: ${{ variables.DEVMATCH_SUBMISSION_ID }}"
  condition: or(eq(variables['DEVMATCH_SUBMISSION_ID'], ''), eq(variables['DEVMATCH_SUBMISSION_ID'], 'NULL'))
  
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

# Java tool installer v0
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '8' # string. Required. JDK version. Default: 8.
    jdkArchitectureOption: x64 # 'x64' | 'x86'. Required. JDK architecture. 
    jdkSourceOption: PreInstalled

- script: |
    yarn install
  displayName: 'install dependencies'
  workingDirectory: backend

- script: |
    yarn serverless dynamodb install
    yarn serverless dynamodb start &
  displayName: 'install and start dynamodb local'
  workingDirectory: backend

- script: |
    yarn test
  displayName: 'star testing'
  workingDirectory: backend


- task: PublishBuildArtifacts@1
  condition: always()
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/backend/test-output.json'
    ArtifactName: 'test-output.json'
    publishLocation: Container

#- publish: $(System.DefaultWorkingDirectory)/backend/test-output.json
#  artifact: test-output.json
  

